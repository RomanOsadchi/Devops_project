name: Deploy service

on:
  push:
    branches:
      - main


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to GCR
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker --quiet

      - name: Build with cache
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/nest-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  terraform-apply:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Authenticate to GCP
        run: |
          echo "${{ secrets.GCS_KEY }}" > credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS=$PWD/credentials.json

      - name: Initialize Terraform
        run: terraform -chdir=terraform init

      - name: Validate Terraform
        run: terraform -chdir=terraform validate

      - name: Plan Terraform
        run: terraform -chdir=terraform plan -out=tfplan

      - name: Apply Terraform
        run: terraform -chdir=terraform apply -auto-approve tfplan


  deploy:
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCS_KEY }}

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: gke-cluster
          location: europe-west10
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/ && kubectl rollout restart deployment/nest-app
